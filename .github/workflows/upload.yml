name: Upload Python Package

on:
  release:
    types:
    - published

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install .
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install '.[tests]'
        pytest
    - name: Check the version is updated
      run: |
        REF='${{ github.ref }}'
        python setup.py egg_info
        TAG="${REF#refs/tags/}"
        PKG_NAME=$(sed '/^Name: /s///p; d' *.egg-info/PKG-INFO)
        VERSION=$(sed '/^Version: /s///p; d' *.egg-info/PKG-INFO)
        echo ::set-env name=PKG_NAME::"${PKG_NAME}"
        echo ::set-env name=VERSION::"${VERSION}"
        if ! [ "${TAG}" = "v${VERSION}" ]; then
          echo "Tag ${TAG} does not match the package version ${VERSION}" >&2
          exit 1
        fi
    - name: Check the package is not uploaded yet
      id: check_pkg_exists
      continue-on-error: true
      run: |
        echo If this step fails, that means the package already uploaded and a publishing should be skipped
        pip download --no-deps "${PKG_NAME}==${VERSION}" && exit 1 || exit 0
    - name: Build and publish
      if: ${{ steps.check_pkg_exists.outcome == 'success' }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
