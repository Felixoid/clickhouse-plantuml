name: Python build and test

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - '**'

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install '.[tests]'
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

  black:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up latest Python
      uses: actions/setup-python@v1
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install '.[tests,black]'
    - uses: jitterbit/get-changed-files@v1
      id: files
      with:
        format: 'json'
    - name: Test black formatting with pytest
      run: |
        readarray -t files <<< $(jq -r '.[]|select(. | endswith(".py"))' <<< '${{ steps.files.outputs.added_modified }}')
        for file in ${files[@]}; do
          pytest --black "$file"
        done
